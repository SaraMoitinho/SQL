CREATE OR REPLACE TRIGGER DBVESTIB.TBUID_CANDIDATO                                                        
BEFORE INSERT OR UPDATE OR DELETE ON DBVESTIB.CANDIDATO                                                   
FOR EACH ROW                                                                                              
DECLARE
	V_IDT_OPERACAO CHAR(1);
	NVALIDA        NUMBER;
BEGIN
	-- =========================================================================                             
	-- LOG                                                                                            
	-- =========================================================================                             
	IF INSERTING THEN
		V_IDT_OPERACAO := 'I';
	ELSIF UPDATING THEN
		V_IDT_OPERACAO := 'U';
	ELSIF DELETING THEN
		V_IDT_OPERACAO := 'D';
	END IF;

	IF INSERTING
	   OR UPDATING THEN
		:NEW.DAT_OPERACAO_LOG := SYSDATE;
		:NEW.COD_USUARIO_LOG  := DBSIAF.F_BUSCA_FUNCIONARIO(USER);
		:NEW.EMAIL            := LOWER(TRIM(:NEW.EMAIL));
		IF (DBSIAF.F_VERIFICA_CPF(:NEW.CPFCAN) <> 'SIM') THEN
			IF INSERTING THEN
				:NEW.CPFCAN := NULL;
			ELSIF (UPDATING('CPFCAN'))
				  AND ((:NEW.CPFCAN <> :OLD.CPFCAN) OR ((:OLD.CPFCAN IS NULL) AND (:NEW.CPFCAN IS NOT NULL))) THEN
				RAISE_APPLICATION_ERROR(-20500,
										'Favor informar um cpf válido!');
			END IF;
		END IF;
	
		IF UPDATING('VALPAGO') THEN
			IF (NVL(:OLD.VALPAGO,
					0) > 0 AND (:OLD.VALPAGO <> :NEW.VALPAGO)) THEN
				RAISE_APPLICATION_ERROR(-20500,
										'O valor pago do candidato não pode ser alterado. Favor estornar a inscrição para alterar o valor.');
			END IF;
		END IF;
	
		INSERT INTO DBVESTIB.CANDIDATO_LOG
			(CODCONC,
			 CODCAN,
			 NOMCAN,
			 SEXCAN,
			 DATNASCAN,
			 IDECAN,
			 NOMIDECAN,
			 EXPIDECAN,
			 TELCAN,
			 ENDCAN,
			 BAICAN,
			 CIDCAN,
			 ESTCAN,
			 CEPCAN,
			 DATINSCAN,
			 DATPAGCAN,
			 CODLOCPAG,
			 SITCAN,
			 CLACAN,
			 CLACAN2,
			 CODLOC,
			 CODSAL,
			 EMAIL,
			 TOTPON,
			 TOTPON2,
			 CANHOTO,
			 TAG,
			 CODCANANT,
			 REGFCH,
			 FLGMAT,
			 DATINCCAN,
			 str_SOCECO,
			 SITCAN2,
			 CODTPODEF,
			 IND_TREINANTE,
			 SITCANGER,
			 CLACANGER,
			 CODDIS,
			 NOM_PAI,
			 NOM_MAE,
			 IND_ALUNO_FUNCESI,
			 TIP_ESCOLA,
			 REG_EMPREGADO,
			 NOM_EMPREGADO,
			 LOC_TRABALHO,
			 CODCIDPROVA,
			 CODCIDESCOLHA,
			 CELCAN,
			 CPFCAN,
			 SERIECAN,
			 NOMEESC,
			 RAMAL,
			 NUMERO,
			 MATRICULA,
			 FORMA_INGRESSO,
			 ESCOLA_ORIGEM,
			 SENCAN,
			 TELESC,
			 NUMCRESP,
			 DSCCRESP,
			 NUMEQUIPE,
			 DSCEQUIPE,
			 INDUSATRANS,
			 INDQUANTPASSAGEM,
			 INDITIESCOLHIDO,
			 CODEMP,
			 INDLEESCREVE,
			 ENDESC,
			 COMPLEMENTO,
			 NUMEND,
			 COD_LOC_INSCRICAO,
			 COD_FIS_INSCRICAO,
			 NOM_SETOR,
			 VALPAGO,
			 INDCONFIRMADO,
			 BAIESC,
			 CEPESC,
			 CIDESC,
			 NUM_ESCOLA,
			 COMPLEMENTO_ESCOLA,
			 COD_INSTIT_EXTERNA,
			 CODCAMPROXRESIDENCIA,
			 CODFORMAPROVA,
			 ANOENEM,
			 NUMINSCENEM,
			 DATPROVAAGENDADA,
			 CODESTADOCIVIL,
			 CODPAISNC,
			 CODCIDADENAT,
			 TELCOMERCIAL,
			 INDTRABALHA,
			 CLACAN3,
			 SITCAN3,
			 TOTPON3,
			 CODESCOLA,
			 EMAIL_ALTERNATIVO,
			 NOMCURSOGRADUACAO,
			 CODBARRAS,
			 COD_GRD_CURRICULAR,
			 COD_GRD_QUALIFICACAO,
			 COD_OCORRENCIA,
			 COD_USUARIO_LOG,
			 DAT_OPERACAO_LOG,
			 IDT_OPERACAO_LOG)
		VALUES
			(:NEW.CODCONC,
			 :NEW.CODCAN,
			 :NEW.NOMCAN,
			 :NEW.SEXCAN,
			 :NEW.DATNASCAN,
			 :NEW.IDECAN,
			 :NEW.NOMIDECAN,
			 :NEW.EXPIDECAN,
			 :NEW.TELCAN,
			 :NEW.ENDCAN,
			 :NEW.BAICAN,
			 :NEW.CIDCAN,
			 :NEW.ESTCAN,
			 :NEW.CEPCAN,
			 :NEW.DATINSCAN,
			 :NEW.DATPAGCAN,
			 :NEW.CODLOCPAG,
			 :NEW.SITCAN,
			 :NEW.CLACAN,
			 :NEW.CLACAN2,
			 :NEW.CODLOC,
			 :NEW.CODSAL,
			 :NEW.EMAIL,
			 :NEW.TOTPON,
			 :NEW.TOTPON2,
			 :NEW.CANHOTO,
			 :NEW.TAG,
			 :NEW.CODCANANT,
			 :NEW.REGFCH,
			 :NEW.FLGMAT,
			 :NEW.DATINCCAN,
			 :NEW.STR_SOCECO,
			 :NEW.SITCAN2,
			 :NEW.CODTPODEF,
			 :NEW.IND_TREINANTE,
			 :NEW.SITCANGER,
			 :NEW.CLACANGER,
			 :NEW.CODDIS,
			 :NEW.NOM_PAI,
			 :NEW.NOM_MAE,
			 :NEW.IND_ALUNO_FUNCESI,
			 :NEW.TIP_ESCOLA,
			 :NEW.REG_EMPREGADO,
			 :NEW.NOM_EMPREGADO,
			 :NEW.LOC_TRABALHO,
			 :NEW.CODCIDPROVA,
			 :NEW.CODCIDESCOLHA,
			 :NEW.CELCAN,
			 :NEW.CPFCAN,
			 :NEW.SERIECAN,
			 :NEW.NOMEESC,
			 :NEW.RAMAL,
			 :NEW.NUMERO,
			 :NEW.MATRICULA,
			 :NEW.FORMA_INGRESSO,
			 :NEW.ESCOLA_ORIGEM,
			 :NEW.SENCAN,
			 :NEW.TELESC,
			 :NEW.NUMCRESP,
			 :NEW.DSCCRESP,
			 :NEW.NUMEQUIPE,
			 :NEW.DSCEQUIPE,
			 :NEW.INDUSATRANS,
			 :NEW.INDQUANTPASSAGEM,
			 :NEW.INDITIESCOLHIDO,
			 :NEW.CODEMP,
			 :NEW.INDLEESCREVE,
			 :NEW.ENDESC,
			 :NEW.COMPLEMENTO,
			 :NEW.NUMEND,
			 :NEW.COD_LOC_INSCRICAO,
			 :NEW.COD_FIS_INSCRICAO,
			 :NEW.NOM_SETOR,
			 :NEW.VALPAGO,
			 :NEW.INDCONFIRMADO,
			 :NEW.BAIESC,
			 :NEW.CEPESC,
			 :NEW.CIDESC,
			 :NEW.NUM_ESCOLA,
			 :NEW.COMPLEMENTO_ESCOLA,
			 :NEW.COD_INSTIT_EXTERNA,
			 :NEW.CODCAMPROXRESIDENCIA,
			 :NEW.CODFORMAPROVA,
			 :NEW.ANOENEM,
			 :NEW.NUMINSCENEM,
			 :NEW.DATPROVAAGENDADA,
			 :NEW.CODESTADOCIVIL,
			 :NEW.CODPAISNC,
			 :NEW.CODCIDADENAT,
			 :NEW.TELCOMERCIAL,
			 :NEW.INDTRABALHA,
			 :NEW.CLACAN3,
			 :NEW.SITCAN3,
			 :NEW.TOTPON3,
			 :NEW.CODESCOLA,
			 :NEW.EMAIL_ALTERNATIVO,
			 :NEW.NOMCURSOGRADUACAO,
			 :NEW.CODBARRAS,
			 :NEW.COD_GRD_CURRICULAR,
			 :NEW.COD_GRD_QUALIFICACAO,
			 :NEW.COD_OCORRENCIA,
			 :NEW.COD_USUARIO_LOG,
			 :NEW.DAT_OPERACAO_LOG,
			 V_IDT_OPERACAO);
	END IF;

	IF DELETING THEN
		INSERT INTO DBVESTIB.CANDIDATO_LOG
			(CODCONC,
			 CODCAN,
			 NOMCAN,
			 SEXCAN,
			 DATNASCAN,
			 IDECAN,
			 NOMIDECAN,
			 EXPIDECAN,
			 TELCAN,
			 ENDCAN,
			 BAICAN,
			 CIDCAN,
			 ESTCAN,
			 CEPCAN,
			 DATINSCAN,
			 DATPAGCAN,
			 CODLOCPAG,
			 SITCAN,
			 CLACAN,
			 CLACAN2,
			 CODLOC,
			 CODSAL,
			 EMAIL,
			 TOTPON,
			 TOTPON2,
			 CANHOTO,
			 TAG,
			 CODCANANT,
			 REGFCH,
			 FLGMAT,
			 DATINCCAN,
			 str_SOCECO,
			 SITCAN2,
			 CODTPODEF,
			 IND_TREINANTE,
			 SITCANGER,
			 CLACANGER,
			 CODDIS,
			 NOM_PAI,
			 NOM_MAE,
			 IND_ALUNO_FUNCESI,
			 TIP_ESCOLA,
			 REG_EMPREGADO,
			 NOM_EMPREGADO,
			 LOC_TRABALHO,
			 CODCIDPROVA,
			 CODCIDESCOLHA,
			 CELCAN,
			 CPFCAN,
			 SERIECAN,
			 NOMEESC,
			 RAMAL,
			 NUMERO,
			 MATRICULA,
			 FORMA_INGRESSO,
			 ESCOLA_ORIGEM,
			 SENCAN,
			 TELESC,
			 NUMCRESP,
			 DSCCRESP,
			 NUMEQUIPE,
			 DSCEQUIPE,
			 INDUSATRANS,
			 INDQUANTPASSAGEM,
			 INDITIESCOLHIDO,
			 CODEMP,
			 INDLEESCREVE,
			 ENDESC,
			 COMPLEMENTO,
			 NUMEND,
			 COD_LOC_INSCRICAO,
			 COD_FIS_INSCRICAO,
			 NOM_SETOR,
			 VALPAGO,
			 INDCONFIRMADO,
			 BAIESC,
			 CEPESC,
			 CIDESC,
			 NUM_ESCOLA,
			 COMPLEMENTO_ESCOLA,
			 COD_INSTIT_EXTERNA,
			 CODCAMPROXRESIDENCIA,
			 CODFORMAPROVA,
			 ANOENEM,
			 NUMINSCENEM,
			 DATPROVAAGENDADA,
			 CODESTADOCIVIL,
			 CODPAISNC,
			 CODCIDADENAT,
			 TELCOMERCIAL,
			 INDTRABALHA,
			 CLACAN3,
			 SITCAN3,
			 TOTPON3,
			 CODESCOLA,
			 EMAIL_ALTERNATIVO,
			 NOMCURSOGRADUACAO,
			 CODBARRAS,
			 COD_GRD_CURRICULAR,
			 COD_GRD_QUALIFICACAO,
			 COD_OCORRENCIA,
			 COD_USUARIO_LOG,
			 DAT_OPERACAO_LOG,
			 IDT_OPERACAO_LOG)
		VALUES
			(:OLD.CODCONC,
			 :OLD.CODCAN,
			 :OLD.NOMCAN,
			 :OLD.SEXCAN,
			 :OLD.DATNASCAN,
			 :OLD.IDECAN,
			 :OLD.NOMIDECAN,
			 :OLD.EXPIDECAN,
			 :OLD.TELCAN,
			 :OLD.ENDCAN,
			 :OLD.BAICAN,
			 :OLD.CIDCAN,
			 :OLD.ESTCAN,
			 :OLD.CEPCAN,
			 :OLD.DATINSCAN,
			 :OLD.DATPAGCAN,
			 :OLD.CODLOCPAG,
			 :OLD.SITCAN,
			 :OLD.CLACAN,
			 :OLD.CLACAN2,
			 :OLD.CODLOC,
			 :OLD.CODSAL,
			 :OLD.EMAIL,
			 :OLD.TOTPON,
			 :OLD.TOTPON2,
			 :OLD.CANHOTO,
			 :OLD.TAG,
			 :OLD.CODCANANT,
			 :OLD.REGFCH,
			 :OLD.FLGMAT,
			 :OLD.DATINCCAN,
			 :OLD.STR_SOCECO,
			 :OLD.SITCAN2,
			 :OLD.CODTPODEF,
			 :OLD.IND_TREINANTE,
			 :OLD.SITCANGER,
			 :OLD.CLACANGER,
			 :OLD.CODDIS,
			 :OLD.NOM_PAI,
			 :OLD.NOM_MAE,
			 :OLD.IND_ALUNO_FUNCESI,
			 :OLD.TIP_ESCOLA,
			 :OLD.REG_EMPREGADO,
			 :OLD.NOM_EMPREGADO,
			 :OLD.LOC_TRABALHO,
			 :OLD.CODCIDPROVA,
			 :OLD.CODCIDESCOLHA,
			 :OLD.CELCAN,
			 :OLD.CPFCAN,
			 :OLD.SERIECAN,
			 :OLD.NOMEESC,
			 :OLD.RAMAL,
			 :OLD.NUMERO,
			 :OLD.MATRICULA,
			 :OLD.FORMA_INGRESSO,
			 :OLD.ESCOLA_ORIGEM,
			 :OLD.SENCAN,
			 :OLD.TELESC,
			 :OLD.NUMCRESP,
			 :OLD.DSCCRESP,
			 :OLD.NUMEQUIPE,
			 :OLD.DSCEQUIPE,
			 :OLD.INDUSATRANS,
			 :OLD.INDQUANTPASSAGEM,
			 :OLD.INDITIESCOLHIDO,
			 :OLD.CODEMP,
			 :OLD.INDLEESCREVE,
			 :OLD.ENDESC,
			 :OLD.COMPLEMENTO,
			 :OLD.NUMEND,
			 :OLD.COD_LOC_INSCRICAO,
			 :OLD.COD_FIS_INSCRICAO,
			 :OLD.NOM_SETOR,
			 :OLD.VALPAGO,
			 :OLD.INDCONFIRMADO,
			 :OLD.BAIESC,
			 :OLD.CEPESC,
			 :OLD.CIDESC,
			 :OLD.NUM_ESCOLA,
			 :OLD.COMPLEMENTO_ESCOLA,
			 :OLD.COD_INSTIT_EXTERNA,
			 :OLD.CODCAMPROXRESIDENCIA,
			 :OLD.CODFORMAPROVA,
			 :OLD.ANOENEM,
			 :OLD.NUMINSCENEM,
			 :OLD.DATPROVAAGENDADA,
			 :OLD.CODESTADOCIVIL,
			 :OLD.CODPAISNC,
			 :OLD.CODCIDADENAT,
			 :OLD.TELCOMERCIAL,
			 :OLD.INDTRABALHA,
			 :OLD.CLACAN3,
			 :OLD.SITCAN3,
			 :OLD.TOTPON3,
			 :OLD.CODESCOLA,
			 :OLD.EMAIL_ALTERNATIVO,
			 :OLD.NOMCURSOGRADUACAO,
			 :OLD.CODBARRAS,
			 :OLD.COD_GRD_CURRICULAR,
			 :OLD.COD_GRD_QUALIFICACAO,
			 :OLD.COD_OCORRENCIA,
			 DBSIAF.F_BUSCA_FUNCIONARIO(USER),
			 SYSDATE,
			 V_IDT_OPERACAO);
	END IF;

	-- ATUALIZAÇÃO FEITA NAS INSCRIÇÕES DA FIAT
	IF UPDATING THEN
	
		SELECT COUNT(*)
		  INTO NVALIDA
		  FROM DBVESTIB.CONCURSO CON
		 WHERE CON.COD_TPO_CONCURSO = 8
			   AND CON.CODCONC = :NEW.CODCONC
			   AND EXISTS (SELECT 1
				  FROM DBVESTIB.INSCRICAO_FIAT IFI
				 WHERE IFI.CODCONC = :NEW.CODCONC
					   AND IFI.CODINSC = :NEW.CODCAN);
	
		IF NVALIDA > 0 THEN
			UPDATE DBVESTIB.INSCRICAO
			   SET NOMCAN      = :NEW.NOMCAN,
				   SEXCAN      = :NEW.SEXCAN,
				   DATNASCAN   = :NEW.DATNASCAN,
				   FLGCANHOTO  = :NEW.CANHOTO,
				   CODTPODEF   = :NEW.CODTPODEF,
				   ENDCAN      = :NEW.ENDCAN,
				   NUMERO      = :NEW.NUMEND,
				   COMPLEMENTO = :NEW.COMPLEMENTO,
				   BAICAN      = :NEW.BAICAN,
				   CEPCAN      = :NEW.CEPCAN,
				   TELCAN      = :NEW.TELCAN,
				   CELCAN      = :NEW.CELCAN,
				   EMAILCAN    = :NEW.EMAIL
			
			 WHERE CODCONC = :NEW.CODCONC
				   AND CODINSC = :NEW.CODCAN;
		
			UPDATE DBVESTIB.INSCRICAO_FIAT
			   SET CODEMP                     = :NEW.CODEMP,
				   NOMEESC                    = :NEW.NOMEESC,
				   ENDESC                     = :NEW.ENDESC,
				   NUM_ESCOLA                 = :NEW.NUM_ESCOLA,
				   COMPLEMENTO_ESCOLA         = :NEW.COMPLEMENTO_ESCOLA,
				   BAIESC                     = :NEW.BAIESC,
				   CEPESC                     = :NEW.CEPESC,
				   TELESC                     = :NEW.TELESC,
				   NOM_EMPREGADO              = :NEW.NOM_EMPREGADO,
				   REG_EMPREGADO              = :NEW.REG_EMPREGADO,
				   RAMAL                      = :NEW.RAMAL,
				   DSCCRESP                   = :NEW.DSCCRESP,
				   DSCEQUIPE                  = :NEW.DSCEQUIPE,
				   INDLERESCREVER             = :NEW.INDLEESCREVE,
				   INDUSATRANS                = :NEW.INDUSATRANS,
				   COD_CAMPUS_PROX_RESIDENCIA = :NEW.CODCAMPROXRESIDENCIA
			 WHERE CODCONC = :NEW.CODCONC
				   AND CODINSC = :NEW.CODCAN;
		END IF;
	END IF;

	-- LIMPANDO DISTRIBUICAO DE ENEM
	IF UPDATING('CODFORMAPROVA') THEN
		IF :NEW.CODFORMAPROVA = 2
		   AND :OLD.CODFORMAPROVA IN (1,
									  4) THEN
			IF (:NEW.CODLOC IS NOT NULL)
			   AND (:NEW.CODSAL IS NOT NULL) THEN
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASDISTRIB := DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASDISTRIB + 1;
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VINSCRICAODISTRIB(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASDISTRIB).CODCONC := :NEW.CODCONC;
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VINSCRICAODISTRIB(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASDISTRIB).CODINSC := :NEW.CODCAN;
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VINSCRICAODISTRIB(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASDISTRIB).CODFORMAPROVA := 2;
			END IF;
		END IF;
	END IF;

	IF (INSERTING OR UPDATING)
	   AND (DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHAS = 0)
	   AND (NOT (UPDATING('CODEMP')))
	   AND (NOT (UPDATING('SITCAN')))
	   AND (NOT (UPDATING('SITCAN2')))
	   AND (NOT (UPDATING('SITCAN3')))
	   AND (NOT (UPDATING('SITCANGER'))) THEN
		BEGIN
			DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASCANDIDATO := DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASCANDIDATO + 1;
			DBVESTIB.PC_INSCRICAO_MUT_TBL.VCANDIDATO(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASCANDIDATO).CODCONC := :NEW.CODCONC;
			DBVESTIB.PC_INSCRICAO_MUT_TBL.VCANDIDATO(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASCANDIDATO).CODCAN := :NEW.CODCAN;
		EXCEPTION
			WHEN OTHERS THEN
				NULL;
		END;
	ELSIF DELETING THEN
	
		DBVESTIB.PC_INSCRICAO_MUT_TBL.BEXCLUINDOCANDIDATO := TRUE;
		-- inscricao
		DELETE FROM DBVESTIB.REGISTRO_BAIXA
		 WHERE CODCONC = :OLD.CODCONC
			   AND CODINSC = :OLD.CODCAN;
	
		UPDATE DBVESTIB.INSCRICAO
		   SET COD_STATUS_INSCRICAO = 4,
			   DATPGTO              = NULL
		 WHERE CODCONC = :OLD.CODCONC
			   AND CODINSC = :OLD.CODCAN;
	END IF;

	IF INSERTING
	   OR UPDATING THEN
		IF ((:NEW.TELCAN IS NOT NULL) AND (LENGTH(DBSIAF.F_SO_NUMERO(:NEW.TELCAN)) < 10)) THEN
			RAISE_APPLICATION_ERROR(-20500,
									:NEW.CODCAN || ' ' || :NEW.CODCONC || 'O telefone deverá possuir apenas dígitos. Sendo DDD (02 dígitos) e Telefone (10 dígitos).');
		END IF;
		IF ((:NEW.CELCAN IS NOT NULL) AND (LENGTH(DBSIAF.F_SO_NUMERO(:NEW.CELCAN)) < 10)) THEN
			RAISE_APPLICATION_ERROR(-20500,
									:NEW.CODCAN || ' ' || :NEW.CODCONC || 'O telefone deverá possuir apenas dígitos. Sendo DDD (02 dígitos) e Celular (10 dígitos).');
		END IF;
		IF ((:NEW.TELCOMERCIAL IS NOT NULL) AND (LENGTH(DBSIAF.F_SO_NUMERO(:NEW.TELCOMERCIAL)) < 10)) THEN
			RAISE_APPLICATION_ERROR(-20500,
									:NEW.CODCAN || ' ' || :NEW.CODCONC || 'O telefone Comercial deverá possuir apenas dígitos. Sendo DDD (02 dígitos) e Telefone (10 dígitos).');
		END IF;
	
	END IF;

EXCEPTION
	WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20500,
								SQLERRM);
END TBUID_CANDIDATO;
/
