CREATE OR REPLACE TRIGGER DBVESTIB.TBUID_INSCRICAO
BEFORE INSERT OR UPDATE OR DELETE ON DBVESTIB.INSCRICAO
FOR EACH ROW
DECLARE
	V_IDT_OPERACAO CHAR(1);
	NVALIDA        NUMBER;
BEGIN
	-- =========================================================================
	-- LOG
	-- =========================================================================
	IF INSERTING THEN
		V_IDT_OPERACAO := 'I';
	ELSIF UPDATING THEN
		V_IDT_OPERACAO := 'U';
	ELSIF DELETING THEN
		V_IDT_OPERACAO := 'D';
	END IF;

	IF INSERTING
	   OR UPDATING THEN
		:NEW.DAT_OPERACAO_LOG  := SYSDATE;
		:NEW.COD_USUARIO_LOG   := DBSIAF.F_BUSCA_FUNCIONARIO(USER);
		:NEW.EMAILCAN          := LOWER(TRIM(:NEW.EMAILCAN));
		:NEW.EMAIL_ALTERNATIVO := LOWER(TRIM(:NEW.EMAIL_ALTERNATIVO));
	
		IF INSERTING
		   OR UPDATING('CPFCAN') THEN
			SELECT COUNT(1)
			  INTO NVALIDA
			  FROM DBVESTIB.PARAMETROS_CONCURSO PCO
			 WHERE PCO.CODCONC = :NEW.CODCONC
				   AND PCO.INDCPFOBRIGATORIO = 'S';
			IF (NVALIDA > 0 OR :NEW.CPFCAN IS NOT NULL) THEN
				:NEW.CPFCAN := LPAD(DBSIAF.F_SO_NUMERO(:NEW.CPFCAN),
									11,
									0);
				IF (DBSIAF.F_VERIFICA_CPF(:NEW.CPFCAN) <> 'SIM') THEN
					RAISE_APPLICATION_ERROR(-20500,
											'Favor informar um cpf válido!');
				END IF;
			END IF;
		
			SELECT COUNT(1)
			  INTO NVALIDA
			  FROM DBVESTIB.CONCURSO      CON,
				   DBVESTIB.TIPO_CONCURSO TCO
			 WHERE CON.CODCONC = :NEW.CODCONC
				   AND CON.COD_TPO_CONCURSO = TCO.COD_TPO_CONCURSO
				   AND TCO.INDFORMAINGRESSOOBRIG = 'S';
		
			IF (NVALIDA > 0)
			   AND (:NEW.FORMA_INGRESSO IS NULL) THEN
				RAISE_APPLICATION_ERROR(-20500,
										'Forma de ingresso é obrigatória!');
			END IF;
		
		END IF;
	
		INSERT INTO DBVESTIB.INSCRICAO_LOG
			(CODCONC,
			 CODINSC,
			 CODTIPDOC,
			 CODESTADO,
			 CODCIDADE,
			 CODTPODEF,
			 NOMCAN,
			 SEXCAN,
			 DATNASCAN,
			 NRODOC,
			 ENDCAN,
			 BAICAN,
			 CEPCAN,
			 TELCAN,
			 FLGCANHOTO,
			 EMAILCAN,
			 DATINSCAN,
			 IND_TREINANTE,
			 FORMAPGTO,
			 DATPGTO,
			 LOGCAN,
			 SENCAN,
			 CODTRANS,
			 CODAUT,
			 DSCTPOTRANS,
			 NUMCV,
			 NUMPED,
			 INDCAPTURA,
			 LOGREF,
			 CODCARTA,
			 PAICAN,
			 MAECAN,
			 CELCAN,
			 CPFCAN,
			 ESCOLA_ORIGEM,
			 FORMA_INGRESSO,
			 MATRICULA,
			 TIPO_INSCRICAO,
			 DAT_VENCIMENTO,
			 COD_STATUS_INSCRICAO,
			 DAT_DEVOLUCAO,
			 CODLOCPAG,
			 DAT_CANCELAMENTO,
			 COD_TPO_INSCRICAO,
			 COD_BANCO,
			 AGENCIA_DEVOLUCAO,
			 OPERACAO_DEVOLUCAO,
			 CONTA_DEVOLUCAO,
			 TIT_CONTA_DEVOLUCAO,
			 NUMERO,
			 COMPLEMENTO,
			 COD_LOC_INSCRICAO,
			 COD_FIS_INSCRICAO,
			 VALPAGO,
			 COD_TPO_ENVIO,
			 IND_VISUALIZACAO_BOLETO,
			 CODTEL,
			 INDALTERALOGIN,
			 CODCLI,
			 IND_EMAIL_ENVIADO,
			 EMAIL_ALTERNATIVO,
			 COD_INSTIT_EXTERNA,
			 INDINSCGRATUITA,
			 DSCRESPPROMOCAO,
			 CODFORMAPROVA,
			 ANOENEM,
			 NUMINSCENEM,
			 DATPROVAAGENDADA,
			 COD_DESC_PERIODO,
			 CODESTADOCIVIL,
			 CODPAISNC,
			 CODCIDADENAT,
			 TELCOMERCIAL,
			 INDTRABALHA,
			 CODTUREM,
			 CODTPOEM,
			 NOMEMP,
			 INDCONVENIADO,
			 NOMEMPCONVENIADO,
			 DSCTPOEM,
			 OBSINSC,
			 CODESCOLA,
			 INDANALISEDISPENSA,
			 NOMCURSOGRADUACAO,
			 COD_GRD_CURRICULAR,
			 COD_GRD_QUALIFICACAO,
			 COD_OCORRENCIA,
			 COD_USUARIO_LOG,
			 DAT_OPERACAO_LOG,
			 IDT_OPERACAO_LOG)
		VALUES
			(:NEW.CODCONC,
			 :NEW.CODINSC,
			 :NEW.CODTIPDOC,
			 :NEW.CODESTADO,
			 :NEW.CODCIDADE,
			 :NEW.CODTPODEF,
			 :NEW.NOMCAN,
			 :NEW.SEXCAN,
			 :NEW.DATNASCAN,
			 :NEW.NRODOC,
			 :NEW.ENDCAN,
			 :NEW.BAICAN,
			 :NEW.CEPCAN,
			 :NEW.TELCAN,
			 :NEW.FLGCANHOTO,
			 :NEW.EMAILCAN,
			 :NEW.DATINSCAN,
			 :NEW.IND_TREINANTE,
			 :NEW.FORMAPGTO,
			 :NEW.DATPGTO,
			 :NEW.LOGCAN,
			 :NEW.SENCAN,
			 :NEW.CODTRANS,
			 :NEW.CODAUT,
			 :NEW.DSCTPOTRANS,
			 :NEW.NUMCV,
			 :NEW.NUMPED,
			 :NEW.INDCAPTURA,
			 :NEW.LOGREF,
			 :NEW.CODCARTA,
			 :NEW.PAICAN,
			 :NEW.MAECAN,
			 :NEW.CELCAN,
			 :NEW.CPFCAN,
			 :NEW.ESCOLA_ORIGEM,
			 :NEW.FORMA_INGRESSO,
			 :NEW.MATRICULA,
			 :NEW.TIPO_INSCRICAO,
			 :NEW.DAT_VENCIMENTO,
			 :NEW.COD_STATUS_INSCRICAO,
			 :NEW.DAT_DEVOLUCAO,
			 :NEW.CODLOCPAG,
			 :NEW.DAT_CANCELAMENTO,
			 :NEW.COD_TPO_INSCRICAO,
			 :NEW.COD_BANCO,
			 :NEW.AGENCIA_DEVOLUCAO,
			 :NEW.OPERACAO_DEVOLUCAO,
			 :NEW.CONTA_DEVOLUCAO,
			 :NEW.TIT_CONTA_DEVOLUCAO,
			 :NEW.NUMERO,
			 :NEW.COMPLEMENTO,
			 :NEW.COD_LOC_INSCRICAO,
			 :NEW.COD_FIS_INSCRICAO,
			 :NEW.VALPAGO,
			 :NEW.COD_TPO_ENVIO,
			 :NEW.IND_VISUALIZACAO_BOLETO,
			 :NEW.CODTEL,
			 :NEW.INDALTERALOGIN,
			 :NEW.CODCLI,
			 :NEW.IND_EMAIL_ENVIADO,
			 :NEW.EMAIL_ALTERNATIVO,
			 :NEW.COD_INSTIT_EXTERNA,
			 :NEW.INDINSCGRATUITA,
			 :NEW.DSCRESPPROMOCAO,
			 :NEW.CODFORMAPROVA,
			 :NEW.ANOENEM,
			 :NEW.NUMINSCENEM,
			 :NEW.DATPROVAAGENDADA,
			 :NEW.COD_DESC_PERIODO,
			 :NEW.CODESTADOCIVIL,
			 :NEW.CODPAISNC,
			 :NEW.CODCIDADENAT,
			 :NEW.TELCOMERCIAL,
			 :NEW.INDTRABALHA,
			 :NEW.CODTUREM,
			 :NEW.CODTPOEM,
			 :NEW.NOMEMP,
			 :NEW.INDCONVENIADO,
			 :NEW.NOMEMPCONVENIADO,
			 :NEW.DSCTPOEM,
			 :NEW.OBSINSC,
			 :NEW.CODESCOLA,
			 :NEW.INDANALISEDISPENSA,
			 :NEW.NOMCURSOGRADUACAO,
			 :NEW.COD_GRD_CURRICULAR,
			 :NEW.COD_GRD_QUALIFICACAO,
			 :NEW.COD_OCORRENCIA,
			 :NEW.COD_USUARIO_LOG,
			 :NEW.DAT_OPERACAO_LOG,
			 V_IDT_OPERACAO);
	END IF;

	IF DELETING THEN
		INSERT INTO DBVESTIB.INSCRICAO_LOG
			(CODCONC,
			 CODINSC,
			 CODTIPDOC,
			 CODESTADO,
			 CODCIDADE,
			 CODTPODEF,
			 NOMCAN,
			 SEXCAN,
			 DATNASCAN,
			 NRODOC,
			 ENDCAN,
			 BAICAN,
			 CEPCAN,
			 TELCAN,
			 FLGCANHOTO,
			 EMAILCAN,
			 DATINSCAN,
			 IND_TREINANTE,
			 FORMAPGTO,
			 DATPGTO,
			 LOGCAN,
			 SENCAN,
			 CODTRANS,
			 CODAUT,
			 DSCTPOTRANS,
			 NUMCV,
			 NUMPED,
			 INDCAPTURA,
			 LOGREF,
			 CODCARTA,
			 PAICAN,
			 MAECAN,
			 CELCAN,
			 CPFCAN,
			 ESCOLA_ORIGEM,
			 FORMA_INGRESSO,
			 MATRICULA,
			 TIPO_INSCRICAO,
			 DAT_VENCIMENTO,
			 COD_STATUS_INSCRICAO,
			 DAT_DEVOLUCAO,
			 CODLOCPAG,
			 DAT_CANCELAMENTO,
			 COD_TPO_INSCRICAO,
			 COD_BANCO,
			 AGENCIA_DEVOLUCAO,
			 OPERACAO_DEVOLUCAO,
			 CONTA_DEVOLUCAO,
			 TIT_CONTA_DEVOLUCAO,
			 NUMERO,
			 COMPLEMENTO,
			 COD_LOC_INSCRICAO,
			 COD_FIS_INSCRICAO,
			 VALPAGO,
			 COD_TPO_ENVIO,
			 IND_VISUALIZACAO_BOLETO,
			 CODTEL,
			 INDALTERALOGIN,
			 CODCLI,
			 IND_EMAIL_ENVIADO,
			 EMAIL_ALTERNATIVO,
			 COD_INSTIT_EXTERNA,
			 INDINSCGRATUITA,
			 DSCRESPPROMOCAO,
			 CODFORMAPROVA,
			 ANOENEM,
			 NUMINSCENEM,
			 DATPROVAAGENDADA,
			 COD_DESC_PERIODO,
			 CODESTADOCIVIL,
			 CODPAISNC,
			 CODCIDADENAT,
			 TELCOMERCIAL,
			 INDTRABALHA,
			 CODTUREM,
			 CODTPOEM,
			 NOMEMP,
			 INDCONVENIADO,
			 NOMEMPCONVENIADO,
			 DSCTPOEM,
			 OBSINSC,
			 CODESCOLA,
			 INDANALISEDISPENSA,
			 NOMCURSOGRADUACAO,
			 COD_GRD_CURRICULAR,
			 COD_GRD_QUALIFICACAO,
			 COD_OCORRENCIA,
			 COD_USUARIO_LOG,
			 DAT_OPERACAO_LOG,
			 IDT_OPERACAO_LOG)
		VALUES
			(:OLD.CODCONC,
			 :OLD.CODINSC,
			 :OLD.CODTIPDOC,
			 :OLD.CODESTADO,
			 :OLD.CODCIDADE,
			 :OLD.CODTPODEF,
			 :OLD.NOMCAN,
			 :OLD.SEXCAN,
			 :OLD.DATNASCAN,
			 :OLD.NRODOC,
			 :OLD.ENDCAN,
			 :OLD.BAICAN,
			 :OLD.CEPCAN,
			 :OLD.TELCAN,
			 :OLD.FLGCANHOTO,
			 :OLD.EMAILCAN,
			 :OLD.DATINSCAN,
			 :OLD.IND_TREINANTE,
			 :OLD.FORMAPGTO,
			 :OLD.DATPGTO,
			 :OLD.LOGCAN,
			 :OLD.SENCAN,
			 :OLD.CODTRANS,
			 :OLD.CODAUT,
			 :OLD.DSCTPOTRANS,
			 :OLD.NUMCV,
			 :OLD.NUMPED,
			 :OLD.INDCAPTURA,
			 :OLD.LOGREF,
			 :OLD.CODCARTA,
			 :OLD.PAICAN,
			 :OLD.MAECAN,
			 :OLD.CELCAN,
			 :OLD.CPFCAN,
			 :OLD.ESCOLA_ORIGEM,
			 :OLD.FORMA_INGRESSO,
			 :OLD.MATRICULA,
			 :OLD.TIPO_INSCRICAO,
			 :OLD.DAT_VENCIMENTO,
			 :OLD.COD_STATUS_INSCRICAO,
			 :OLD.DAT_DEVOLUCAO,
			 :OLD.CODLOCPAG,
			 :OLD.DAT_CANCELAMENTO,
			 :OLD.COD_TPO_INSCRICAO,
			 :OLD.COD_BANCO,
			 :OLD.AGENCIA_DEVOLUCAO,
			 :OLD.OPERACAO_DEVOLUCAO,
			 :OLD.CONTA_DEVOLUCAO,
			 :OLD.TIT_CONTA_DEVOLUCAO,
			 :OLD.NUMERO,
			 :OLD.COMPLEMENTO,
			 :OLD.COD_LOC_INSCRICAO,
			 :OLD.COD_FIS_INSCRICAO,
			 :OLD.VALPAGO,
			 :OLD.COD_TPO_ENVIO,
			 :OLD.IND_VISUALIZACAO_BOLETO,
			 :OLD.CODTEL,
			 :OLD.INDALTERALOGIN,
			 :OLD.CODCLI,
			 :OLD.IND_EMAIL_ENVIADO,
			 :OLD.EMAIL_ALTERNATIVO,
			 :OLD.COD_INSTIT_EXTERNA,
			 :OLD.INDINSCGRATUITA,
			 :OLD.DSCRESPPROMOCAO,
			 :OLD.CODFORMAPROVA,
			 :OLD.ANOENEM,
			 :OLD.NUMINSCENEM,
			 :OLD.DATPROVAAGENDADA,
			 :OLD.COD_DESC_PERIODO,
			 :OLD.CODESTADOCIVIL,
			 :OLD.CODPAISNC,
			 :OLD.CODCIDADENAT,
			 :OLD.TELCOMERCIAL,
			 :OLD.INDTRABALHA,
			 :OLD.CODTUREM,
			 :OLD.CODTPOEM,
			 :OLD.NOMEMP,
			 :OLD.INDCONVENIADO,
			 :OLD.NOMEMPCONVENIADO,
			 :OLD.DSCTPOEM,
			 :OLD.OBSINSC,
			 :OLD.CODESCOLA,
			 :OLD.INDANALISEDISPENSA,
			 :OLD.NOMCURSOGRADUACAO,
			 :OLD.COD_GRD_CURRICULAR,
			 :OLD.COD_GRD_QUALIFICACAO,
			 :OLD.COD_OCORRENCIA,
			 DBSIAF.F_BUSCA_FUNCIONARIO(USER),
			 SYSDATE,
			 V_IDT_OPERACAO);
	END IF;

	-- =====
	IF INSERTING
	   OR (UPDATING AND NOT DBVESTIB.PC_INSCRICAO.BJAFEZUPDATEINSCRICAO) THEN
		-- =====
		PC_INSCRICAO_MUT_TBL.VNUMLINHAS := PC_INSCRICAO_MUT_TBL.VNUMLINHAS + 1;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).CODINSC := :NEW.CODINSC;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).CODCONC := :NEW.CODCONC;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).CODTEL := :NEW.CODTEL;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).COD_STATUS_INSCRICAO := :NEW.COD_STATUS_INSCRICAO;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).DATPGTO := :NEW.DATPGTO;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).COD_TPO_ENVIO := :NEW.COD_TPO_ENVIO;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).DAT_VENCIMENTO := :NEW.DAT_VENCIMENTO;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO_OLD(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).COD_STATUS_INSCRICAO := :OLD.COD_STATUS_INSCRICAO;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO_OLD(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).DATPGTO := :OLD.DATPGTO;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO_OLD(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).COD_TPO_ENVIO := :OLD.COD_TPO_ENVIO;
		PC_INSCRICAO_MUT_TBL.VINSCRICAO_OLD(PC_INSCRICAO_MUT_TBL.VNUMLINHAS).DAT_VENCIMENTO := :OLD.DAT_VENCIMENTO;
		-- =====
	END IF;
	-- =====

	-- =====================
	-- Tipo de Teleinscrição
	-- =====================
	IF INSERTING THEN
		IF (:NEW.CODTEL IS NOT NULL) THEN
			:NEW.COD_TPO_TELEINSC := 1; -- Nova captação
		END IF;
	END IF;
	-- =====
	IF UPDATING THEN
		IF (:NEW.CPFCAN <> :OLD.CPFCAN)
		   AND (:NEW.COD_STATUS_INSCRICAO <> 2 OR :NEW.COD_STATUS_INSCRICAO IS NULL) THEN
			RAISE_APPLICATION_ERROR(-20500,
									'Não é possivel alterar o CPF de uma inscrição!'); -- Nova captação
		END IF;
	END IF;

	/*  -- Validação Telefones
    
        IF INSERTING
           OR UPDATING THEN
            IF ((:NEW.TELCAN IS NOT NULL) AND (LENGTH(DBSIAF.F_SO_NUMERO(:NEW.TELCAN)) < 10)) THEN
            
                RAISE_APPLICATION_ERROR(-20500,
                                        :NEW.CODINSC || ' ' || :NEW.CODCONC || 'O telefone deverá possuir apenas dígitos. Sendo DDD (02 dígitos) e Telefone (10 dígitos).');
            END IF;
        
            IF ((:NEW.CELCAN IS NOT NULL) AND (LENGTH(DBSIAF.F_SO_NUMERO(:NEW.CELCAN)) < 10)) THEN
                RAISE_APPLICATION_ERROR(-20500,
                                        :NEW.CODINSC || ' ' || :NEW.CODCONC || 'O telefone deverá possuir apenas dígitos. Sendo DDD (02 dígitos) e Celular (10 dígitos).');
            END IF;
            IF ((:NEW.TELCOMERCIAL IS NOT NULL) AND (LENGTH(DBSIAF.F_SO_NUMERO(:NEW.TELCOMERCIAL)) < 10)) THEN
                RAISE_APPLICATION_ERROR(-20500,
                                        :NEW.CODINSC || ' ' || :NEW.CODCONC || 'O telefone deverá possuir apenas dígitos. Sendo DDD (02 dígitos) e Telefone (10 dígitos).');
            END IF;
        END IF;
    
    */
EXCEPTION
	WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20500,
								SQLERRM);
END TBUID_INSCRICAO;
/
