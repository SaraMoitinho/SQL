DECLARE
	CURSOR C_HIST_SIMULA IS
	-- cursor para outros tipos de entrada
		SELECT HSI.COD_HIST_SIMULA COD_HIST_SIMULA,
			   HSI.COD_ALUNO COD_ALUNO,
                  (SELECT NOMCAN
				  FROM DBVESTIB.CANDIDATO C
				 WHERE C.CODCONC = APR.CODCONC
					   AND C.CODCAN = APR.CODINSC) NOME,
                        (SELECT D.NOM_DISCIPLINA
				  FROM DBSIAF.DISCIPLINA D
				 WHERE D.COD_DISCIPLINA = HSI.COD_DISCIPLINA) DISCI,
			   HSI.COD_PERIODO_LETIVO,
			   HSI.COD_DISCIPLINA,
			   HSI.COD_ATIV_DISCIPLINA,
			   HSI.COD_CONCEITO,
			   HSI.VAL_AVALIACAO,
			   HSI.DAT_CADASTRAMENTO,
			   HSI.COD_FUNCIONARIO,
			   HSI.IND_ACERTO,
			   HSI.IND_OUTRO_CURSO,
			   HSI.COD_ARVORE,
			   HSI.DAT_DISPENSA,
			   HSI.IND_FECHAMENTO_DIARIO,
			   HSI.COD_DIARIO_CLASSE,
			   HSI.COD_PROFESSOR,
			   (SELECT MAX(ALU.COD_ALUNO)
				  FROM DBSIAF.ALUNO ALU
				 WHERE ALU.CODCONC = APR.CODCONC
					   AND ALU.CODCAN = APR.CODINSC) COD_ALUNO_ORIGINAL
		  FROM DBSIAF.HIST_SIMULA HSI
		 INNER JOIN DBVESTIB.INSCRICAO_APROVACAO_DEF APR
			ON (APR.COD_ALUNO = HSI.COD_ALUNO AND APR.CODCONC = &PCODCONC)
		 WHERE APR.CODCONC = &PCODCONC
			   AND ((EXISTS ( -- dispensa interna
							 SELECT 1
							   FROM DBSIAF.HIST_DISPENSA_SIMULA HSD
							  WHERE HSD.COD_HIST_SIMULA = HSI.COD_HIST_SIMULA
									AND HSD.IDT_TPO_DISPENSA = 'A')) OR (EXISTS ( -- dispensa externa
																					  SELECT 1
																						FROM DBSIAF.OBS_HIST_SIMULA OBS
																					   WHERE OBS.COD_HIST_SIMULA = HSI.COD_HIST_SIMULA)));

	--  AND HSI.COD_ALUNO = 425636;

    
   /* CURSOR C_HIST_SIMULA_R IS
	-- cursor para REMANEJAMENTO
		SELECT HSI.COD_HIST_SIMULA COD_HIST_SIMULA,
			   HSI.COD_ALUNO COD_ALUNO,
			   APR.CODCONC,
			   APR.CODINSC,
			   (SELECT NOMCAN
				  FROM DBVESTIB.CANDIDATO C
				 WHERE C.CODCONC = APR.CODCONC
					   AND C.CODCAN = APR.CODINSC) NOME,
			   (SELECT D.NOM_DISCIPLINA
				  FROM DBSIAF.DISCIPLINA D
				 WHERE D.COD_DISCIPLINA = HSI.COD_DISCIPLINA) DISCI,
			   HSI.COD_PERIODO_LETIVO,
			   HSI.COD_DISCIPLINA,
			   HSI.COD_ATIV_DISCIPLINA,
			   HSI.COD_CONCEITO,
			   HSI.VAL_AVALIACAO,
			   HSI.DAT_CADASTRAMENTO,
			   HSI.COD_FUNCIONARIO,
			   HSI.IND_ACERTO,
			   HSI.IND_OUTRO_CURSO,
			   HSI.COD_ARVORE,
			   HSI.DAT_DISPENSA,
			   HSI.IND_FECHAMENTO_DIARIO,
			   HSI.COD_DIARIO_CLASSE,
			   HSI.COD_PROFESSOR,
			   (SELECT MAX(ALU.COD_ALUNO)
				  FROM DBSIAF.ALUNO ALU
				 WHERE ALU.CODCONC = APR.CODCONC
					   AND ALU.CODCAN = APR.CODINSC) COD_ALUNO_ORIGINAL
		  FROM DBSIAF.HIST_SIMULA HSI
		 INNER JOIN DBVESTIB.INSCRICAO_APROVACAO_DEF APR
			ON (APR.COD_ALUNO = HSI.COD_ALUNO)
		 INNER JOIN DBSIAF.ALUNO ALN
			ON (ALN.COD_ALUNO = APR.COD_ALUNO AND ALN.CODCONC IS NULL) -- É O ALUNO SIMULA
		 WHERE APR.CODCONC = &PCODCONC
			  --  AND HSI.COD_ALUNO = '1326292'
			   AND ((EXISTS ( -- dispensa interna
							 SELECT 1
							   FROM DBSIAF.HIST_DISPENSA_SIMULA HSD
							  WHERE HSD.COD_HIST_SIMULA = HSI.COD_HIST_SIMULA
									AND HSD.IDT_TPO_DISPENSA = 'A')) OR (EXISTS ( -- dispensa externa
																					  SELECT 1
																						FROM DBSIAF.OBS_HIST_SIMULA OBS
																					   WHERE OBS.COD_HIST_SIMULA = HSI.COD_HIST_SIMULA)));
			  -- AND HSI.COD_ALUNO = 1249571;
*/
	/*CURSOR C_HIST_SIMULA_RC IS
	-- cursor para REMANEJAMENTO CONCLUÍDO
	
		SELECT HSI.COD_HIST_ESCOLAR COD_HIST_SIMULA,
			   HSI.COD_ALUNO COD_ALUNO,
			   APR.CODCONC,
			   APR.CODINSC,
			   (SELECT NOMCAN
				  FROM DBVESTIB.CANDIDATO C
				 WHERE C.CODCONC = APR.CODCONC
					   AND C.CODCAN = APR.CODINSC) NOME,
			   (SELECT D.NOM_DISCIPLINA
				  FROM DBSIAF.DISCIPLINA D
				 WHERE D.COD_DISCIPLINA = HSI.COD_DISCIPLINA) DISCI,
			   HSI.COD_PERIODO_LETIVO,
			   HSI.COD_DISCIPLINA,
			   HSI.COD_ATIV_DISCIPLINA,
			   HSI.COD_CONCEITO,
			   HSI.VAL_AVALIACAO,
			   HSI.DAT_CADASTRAMENTO,
			   HSI.COD_FUNCIONARIO,
			   HSI.IND_ACERTO,
			   HSI.IND_OUTRO_CURSO,
			   HSI.COD_ARVORE,
			   HSI.DAT_DISPENSA,
			   HSI.IND_FECHAMENTO_DIARIO,
			   HSI.COD_DIARIO_CLASSE,
			   HSI.COD_PROFESSOR,
			   (SELECT MAX(ALU.COD_ALUNO)
				  FROM DBSIAF.ALUNO ALU
				 WHERE ALU.CODCONC = APR.CODCONC
					   AND ALU.CODCAN = APR.CODINSC) COD_ALUNO_ORIGINAL
		  FROM DBSIAF.HIST_ESCOLAR HSI
		 INNER JOIN DBVESTIB.INSCRICAO_APROVACAO_DEF_LOG APR
			ON (APR.COD_ALUNO = HSI.COD_ALUNO AND APR.IDT_OPERACAO_LOG = 'I')
		 WHERE APR.CODCONC = &PCODCONC
--			    AND HSI.COD_ALUNO = '1225321'
			   AND ((EXISTS ( -- dispensa interna
							 SELECT 1
							   FROM DBSIAF.HIST_DISPENSA HSD
							  WHERE HSD.COD_HIST_ESCOLAR = HSI.COD_HIST_ESCOLAR
									AND HSD.IDT_TPO_DISPENSA = 'A')) OR (EXISTS ( -- dispensa externa
																					  SELECT 1
																						FROM DBSIAF.OBS_HISTORICO OBS
																					   WHERE OBS.COD_HIST_ESCOLAR = HSI.COD_HIST_ESCOLAR)))
			   AND NOT EXISTS (SELECT 1
				  FROM DBVESTIB.INSCRICAO_APROVACAO_DEF DDD
				 WHERE DDD.CODCONC =  APR.CODCONC
					   AND DDD.CODINSC = apr.CODINSC
					   AND DDD.COD_ALUNO = HSI.COD_ALUNO);
*/
	NCODHISTESCOLAR DBSIAF.HIST_SIMULA.COD_HIST_SIMULA%TYPE;
	NVALIDA         NUMBER;
	NCODALUNO       DBSIAF.ALUNO.COD_ALUNO%TYPE;
BEGIN
	-- Remanejamento concluído, e atualizado na inscricao_aprovacao_def.
	/*FOR R_HIST_SIMULA IN C_HIST_SIMULA_RC LOOP
	
		BEGIN
			BEGIN
			
				-- verifica se já está na tabela correta como aprovado
				SELECT HIS.COD_HIST_ESCOLAR
				  INTO NCODHISTESCOLAR
				  FROM DBSIAF.HIST_ESCOLAR       HIS,
					   DBSIAF.CONCEITO_HISTORICO COH
				 WHERE COH.COD_CONCEITO = HIS.COD_CONCEITO
					   AND HIS.COD_ALUNO = R_HIST_SIMULA.COD_ALUNO
					   AND HIS.COD_PERIODO_LETIVO = R_HIST_SIMULA.COD_PERIODO_LETIVO
					   AND HIS.COD_DISCIPLINA = R_HIST_SIMULA.COD_DISCIPLINA
					   AND NVL(HIS.COD_ATIV_DISCIPLINA,
							   0) = NVL(R_HIST_SIMULA.COD_ATIV_DISCIPLINA,
											0)
					   AND COH.IND_APROVACAO = 'S';
			EXCEPTION
				WHEN NO_DATA_FOUND THEN
					NCODHISTESCOLAR := NULL;
			END;
		
			IF NCODHISTESCOLAR IS NULL THEN
			
				SELECT DBSIAF.HIST_ESCOLAR_S.NEXTVAL
				  INTO NCODHISTESCOLAR
				  FROM DUAL;
			
				INSERT INTO DBSIAF.HIST_ESCOLAR
					(COD_HIST_ESCOLAR,
					 COD_ALUNO,
					 COD_PERIODO_LETIVO,
					 COD_DISCIPLINA,
					 COD_ATIV_DISCIPLINA,
					 COD_CONCEITO,
					 VAL_AVALIACAO,
					 DAT_CADASTRAMENTO,
					 COD_FUNCIONARIO,
					 IND_ACERTO,
					 IND_OUTRO_CURSO,
					 COD_ARVORE,
					 DAT_DISPENSA,
					 IND_FECHAMENTO_DIARIO,
					 COD_DIARIO_CLASSE,
					 COD_PROFESSOR)
				VALUES
					(NCODHISTESCOLAR,
					 R_HIST_SIMULA.COD_ALUNO,
					 R_HIST_SIMULA.COD_PERIODO_LETIVO,
					 R_HIST_SIMULA.COD_DISCIPLINA,
					 R_HIST_SIMULA.COD_ATIV_DISCIPLINA,
					 R_HIST_SIMULA.COD_CONCEITO,
					 R_HIST_SIMULA.VAL_AVALIACAO,
					 R_HIST_SIMULA.DAT_CADASTRAMENTO,
					 R_HIST_SIMULA.COD_FUNCIONARIO,
					 R_HIST_SIMULA.IND_ACERTO,
					 R_HIST_SIMULA.IND_OUTRO_CURSO,
					 R_HIST_SIMULA.COD_ARVORE,
					 R_HIST_SIMULA.DAT_DISPENSA,
					 R_HIST_SIMULA.IND_FECHAMENTO_DIARIO,
					 R_HIST_SIMULA.COD_DIARIO_CLASSE,
					 R_HIST_SIMULA.COD_PROFESSOR);
				COMMIT;
			END IF;
			-- verifica se já existe na hist_dispensa
		
			INSERT INTO DBSIAF.HIST_DISPENSA
				(COD_HIST_ESCOLAR,
				 COD_DISCIPLINA,
				 IDT_TPO_DISPENSA,
				 COD_EQUIVALENCIA,
				 COD_EQUIV_GERADA,
				 IND_PROCESSAMENTO)
				SELECT NCODHISTESCOLAR,
					   COD_DISCIPLINA,
					   IDT_TPO_DISPENSA,
					   COD_EQUIVALENCIA,
					   COD_EQUIV_GERADA,
					   IND_PROCESSAMENTO
				  FROM DBSIAF.HIST_DISPENSA_SIMULA HSD
				 WHERE HSD.COD_HIST_SIMULA = R_HIST_SIMULA.COD_HIST_SIMULA
					   AND HSD.IDT_TPO_DISPENSA = 'A'
					   AND NOT EXISTS (SELECT 1
						  FROM DBSIAF.HIST_DISPENSA HDD
						 WHERE HDD.COD_DISCIPLINA = HSD.COD_DISCIPLINA
							   AND HDD.COD_HIST_ESCOLAR = NCODHISTESCOLAR);
		
			-- verifica se já exists na Obs_historico
		
			INSERT INTO DBSIAF.OBS_HISTORICO
				(COD_HIST_ESCOLAR,
				 NUM_OBSERVACAO,
				 COD_FUNCIONARIO,
				 OBS_HISTORICO,
				 DAT_CADASTRO,
				 COD_INSTIT_EXTERNA,
				 NOM_DISCIPLINA,
				 VAL_CARGA_HORARIA,
				 NUM_CREDITO,
				 SGL_PERIODO_LETIVO,
				 VAL_CON_AVALIACAO)
				SELECT NCODHISTESCOLAR,
					   NUM_OBSERVACAO,
					   COD_FUNCIONARIO,
					   OBS_HISTORICO,
					   DAT_CADASTRO,
					   COD_INSTIT_EXTERNA,
					   NOM_DISCIPLINA,
					   VAL_CARGA_HORARIA,
					   NUM_CREDITO,
					   SGL_PERIODO_LETIVO,
					   VAL_CON_AVALIACAO
				  FROM DBSIAF.OBS_HIST_SIMULA OBS
				 WHERE OBS.COD_HIST_SIMULA = R_HIST_SIMULA.COD_HIST_SIMULA
					   AND (OBS.IDT_TPO_OBS <> 'E' OR OBS.IDT_TPO_OBS IS NULL)
					   AND NOT EXISTS (SELECT 1
						  FROM DBSIAF.OBS_HISTORICO OOO
						 WHERE OOO.COD_HIST_ESCOLAR = NCODHISTESCOLAR
							   AND OOO.NUM_OBSERVACAO = OBS.NUM_OBSERVACAO);
                               
			UPDATE DBVESTIB.INSCRICAO_APROVACAO_DEF
			   SET COD_ALUNO = R_HIST_SIMULA.COD_ALUNO
			 WHERE CODCONC = R_HIST_SIMULA.CODCONC
				   AND CODINSC = R_HIST_SIMULA.CODINSC;
		
			COMMIT;
		
		EXCEPTION
			WHEN OTHERS THEN
              null;
--				RAISE_APPLICATION_ERROR(-20500,SQLERRM);
		END;
	
		
	END LOOP;
	*/FOR R_HIST_SIMULA IN C_HIST_SIMULA LOOP
		BEGIN
			BEGIN
			
				-- verifica se já está na tabela correta como aprovado
				SELECT HIS.COD_HIST_ESCOLAR
				  INTO NCODHISTESCOLAR
				  FROM DBSIAF.HIST_ESCOLAR       HIS,
					   DBSIAF.CONCEITO_HISTORICO COH
				 WHERE COH.COD_CONCEITO = HIS.COD_CONCEITO
					   AND HIS.COD_ALUNO = R_HIST_SIMULA.COD_ALUNO
					   AND HIS.COD_PERIODO_LETIVO = R_HIST_SIMULA.COD_PERIODO_LETIVO
					   AND HIS.COD_DISCIPLINA = R_HIST_SIMULA.COD_DISCIPLINA
					   AND NVL(HIS.COD_ATIV_DISCIPLINA,
							   0) = NVL(R_HIST_SIMULA.COD_ATIV_DISCIPLINA,
											0)
					   AND COH.IND_APROVACAO = 'S';
			EXCEPTION
				WHEN NO_DATA_FOUND THEN
					NCODHISTESCOLAR := NULL;
			END;
		   
           -- SE possui aluno com codconc e codcan
           IF R_HIST_SIMULA.COD_ALUNO_ORIGINAL IS NOT NULL THEN
			
				IF NCODHISTESCOLAR IS NULL THEN
				
					SELECT DBSIAF.HIST_ESCOLAR_S.NEXTVAL
					  INTO NCODHISTESCOLAR
					  FROM DUAL;
				
					INSERT INTO DBSIAF.HIST_ESCOLAR
						(COD_HIST_ESCOLAR,
						 COD_ALUNO,
						 COD_PERIODO_LETIVO,
						 COD_DISCIPLINA,
						 COD_ATIV_DISCIPLINA,
						 COD_CONCEITO,
						 VAL_AVALIACAO,
						 DAT_CADASTRAMENTO,
						 COD_FUNCIONARIO,
						 IND_ACERTO,
						 IND_OUTRO_CURSO,
						 COD_ARVORE,
						 DAT_DISPENSA,
						 IND_FECHAMENTO_DIARIO,
						 COD_DIARIO_CLASSE,
						 COD_PROFESSOR)
					VALUES
						(NCODHISTESCOLAR,
						 R_HIST_SIMULA.COD_ALUNO_ORIGINAL,
						 R_HIST_SIMULA.COD_PERIODO_LETIVO,
						 R_HIST_SIMULA.COD_DISCIPLINA,
						 R_HIST_SIMULA.COD_ATIV_DISCIPLINA,
						 R_HIST_SIMULA.COD_CONCEITO,
						 R_HIST_SIMULA.VAL_AVALIACAO,
						 R_HIST_SIMULA.DAT_CADASTRAMENTO,
						 R_HIST_SIMULA.COD_FUNCIONARIO,
						 R_HIST_SIMULA.IND_ACERTO,
						 R_HIST_SIMULA.IND_OUTRO_CURSO,
						 R_HIST_SIMULA.COD_ARVORE,
						 R_HIST_SIMULA.DAT_DISPENSA,
						 R_HIST_SIMULA.IND_FECHAMENTO_DIARIO,
						 R_HIST_SIMULA.COD_DIARIO_CLASSE,
						 R_HIST_SIMULA.COD_PROFESSOR);
					COMMIT;
				END IF;
				-- verifica se já existe na hist_dispensa
			
				INSERT INTO DBSIAF.HIST_DISPENSA
					(COD_HIST_ESCOLAR,
					 COD_DISCIPLINA,
					 IDT_TPO_DISPENSA,
					 COD_EQUIVALENCIA,
					 COD_EQUIV_GERADA,
					 IND_PROCESSAMENTO)
					SELECT NCODHISTESCOLAR,
						   COD_DISCIPLINA,
						   IDT_TPO_DISPENSA,
						   COD_EQUIVALENCIA,
						   COD_EQUIV_GERADA,
						   IND_PROCESSAMENTO
					  FROM DBSIAF.HIST_DISPENSA_SIMULA HSD
					 WHERE HSD.COD_HIST_SIMULA = R_HIST_SIMULA.COD_HIST_SIMULA
						   AND HSD.IDT_TPO_DISPENSA = 'A'
						   AND NOT EXISTS (SELECT 1
							  FROM DBSIAF.HIST_DISPENSA HDD
							 WHERE HDD.COD_DISCIPLINA = HSD.COD_DISCIPLINA
								   AND HDD.COD_HIST_ESCOLAR = HSD.COD_HIST_SIMULA);
			
				-- verifica se já exists na Obs_historico
			
				INSERT INTO DBSIAF.OBS_HISTORICO
					(COD_HIST_ESCOLAR,
					 NUM_OBSERVACAO,
					 COD_FUNCIONARIO,
					 OBS_HISTORICO,
					 DAT_CADASTRO,
					 COD_INSTIT_EXTERNA,
					 NOM_DISCIPLINA,
					 VAL_CARGA_HORARIA,
					 NUM_CREDITO,
					 SGL_PERIODO_LETIVO,
					 VAL_CON_AVALIACAO)
					SELECT NCODHISTESCOLAR,
						   NUM_OBSERVACAO,
						   COD_FUNCIONARIO,
						   OBS_HISTORICO,
						   DAT_CADASTRO,
						   COD_INSTIT_EXTERNA,
						   NOM_DISCIPLINA,
						   VAL_CARGA_HORARIA,
						   NUM_CREDITO,
						   SGL_PERIODO_LETIVO,
						   VAL_CON_AVALIACAO
					  FROM DBSIAF.OBS_HIST_SIMULA OBS
					 WHERE OBS.COD_HIST_SIMULA = R_HIST_SIMULA.COD_HIST_SIMULA
						   AND (OBS.IDT_TPO_OBS <> 'E' OR OBS.IDT_TPO_OBS IS NULL)
						   AND NOT EXISTS (SELECT 1
							  FROM DBSIAF.OBS_HISTORICO OOO
							 WHERE OOO.COD_HIST_ESCOLAR = NCODHISTESCOLAR
								   AND OOO.NUM_OBSERVACAO = OBS.NUM_OBSERVACAO);
				COMMIT;
			END IF;
		
		EXCEPTION
			WHEN OTHERS THEN
				NULL;
				--RAISE_APPLICATION_ERROR(-20500,SQLERRM);
		END;
		COMMIT;
	END LOOP;

	/*FOR R_HIST_SIMULA IN C_HIST_SIMULA_R LOOP
		BEGIN
			BEGIN
			
				-- verifica se já está na tabela correta como aprovado
				SELECT HIS.COD_HIST_ESCOLAR
				  INTO NCODHISTESCOLAR
				  FROM DBSIAF.HIST_ESCOLAR       HIS,
					   DBSIAF.CONCEITO_HISTORICO COH
				 WHERE COH.COD_CONCEITO = HIS.COD_CONCEITO
					   AND HIS.COD_ALUNO = R_HIST_SIMULA.COD_ALUNO
					   AND HIS.COD_PERIODO_LETIVO = R_HIST_SIMULA.COD_PERIODO_LETIVO
					   AND HIS.COD_DISCIPLINA = R_HIST_SIMULA.COD_DISCIPLINA
					   AND NVL(HIS.COD_ATIV_DISCIPLINA,
							   0) = NVL(R_HIST_SIMULA.COD_ATIV_DISCIPLINA,
											0)
					   AND COH.IND_APROVACAO = 'S';
			EXCEPTION
				WHEN NO_DATA_FOUND THEN
					NCODHISTESCOLAR := NULL;
			END;
		
			IF R_HIST_SIMULA.COD_ALUNO_ORIGINAL IS NULL THEN
			
				IF NCODHISTESCOLAR IS NULL THEN
				
					SELECT DBSIAF.HIST_ESCOLAR_S.NEXTVAL
					  INTO NCODHISTESCOLAR
					  FROM DUAL;
				
					INSERT INTO DBSIAF.HIST_ESCOLAR
						(COD_HIST_ESCOLAR,
						 COD_ALUNO,
						 COD_PERIODO_LETIVO,
						 COD_DISCIPLINA,
						 COD_ATIV_DISCIPLINA,
						 COD_CONCEITO,
						 VAL_AVALIACAO,
						 DAT_CADASTRAMENTO,
						 COD_FUNCIONARIO,
						 IND_ACERTO,
						 IND_OUTRO_CURSO,
						 COD_ARVORE,
						 DAT_DISPENSA,
						 IND_FECHAMENTO_DIARIO,
						 COD_DIARIO_CLASSE,
						 COD_PROFESSOR)
					VALUES
						(NCODHISTESCOLAR,
						 R_HIST_SIMULA.COD_ALUNO,
						 R_HIST_SIMULA.COD_PERIODO_LETIVO,
						 R_HIST_SIMULA.COD_DISCIPLINA,
						 R_HIST_SIMULA.COD_ATIV_DISCIPLINA,
						 R_HIST_SIMULA.COD_CONCEITO,
						 R_HIST_SIMULA.VAL_AVALIACAO,
						 R_HIST_SIMULA.DAT_CADASTRAMENTO,
						 R_HIST_SIMULA.COD_FUNCIONARIO,
						 R_HIST_SIMULA.IND_ACERTO,
						 R_HIST_SIMULA.IND_OUTRO_CURSO,
						 R_HIST_SIMULA.COD_ARVORE,
						 R_HIST_SIMULA.DAT_DISPENSA,
						 R_HIST_SIMULA.IND_FECHAMENTO_DIARIO,
						 R_HIST_SIMULA.COD_DIARIO_CLASSE,
						 R_HIST_SIMULA.COD_PROFESSOR);
					COMMIT;
				END IF;
				-- verifica se já existe na hist_dispensa
			
				INSERT INTO DBSIAF.HIST_DISPENSA
					(COD_HIST_ESCOLAR,
					 COD_DISCIPLINA,
					 IDT_TPO_DISPENSA,
					 COD_EQUIVALENCIA,
					 COD_EQUIV_GERADA,
					 IND_PROCESSAMENTO)
					SELECT NCODHISTESCOLAR,
						   COD_DISCIPLINA,
						   IDT_TPO_DISPENSA,
						   COD_EQUIVALENCIA,
						   COD_EQUIV_GERADA,
						   IND_PROCESSAMENTO
					  FROM DBSIAF.HIST_DISPENSA_SIMULA HSD
					 WHERE HSD.COD_HIST_SIMULA = R_HIST_SIMULA.COD_HIST_SIMULA
						   AND HSD.IDT_TPO_DISPENSA = 'A'
						   AND NOT EXISTS (SELECT 1
							  FROM DBSIAF.HIST_DISPENSA HDD
							 WHERE HDD.COD_DISCIPLINA = HSD.COD_DISCIPLINA
								   AND HDD.COD_HIST_ESCOLAR = HSD.COD_HIST_SIMULA);
			
				-- verifica se já exists na Obs_historico
			
				INSERT INTO DBSIAF.OBS_HISTORICO
					(COD_HIST_ESCOLAR,
					 NUM_OBSERVACAO,
					 COD_FUNCIONARIO,
					 OBS_HISTORICO,
					 DAT_CADASTRO,
					 COD_INSTIT_EXTERNA,
					 NOM_DISCIPLINA,
					 VAL_CARGA_HORARIA,
					 NUM_CREDITO,
					 SGL_PERIODO_LETIVO,
					 VAL_CON_AVALIACAO)
					SELECT NCODHISTESCOLAR,
						   NUM_OBSERVACAO,
						   COD_FUNCIONARIO,
						   OBS_HISTORICO,
						   DAT_CADASTRO,
						   COD_INSTIT_EXTERNA,
						   NOM_DISCIPLINA,
						   VAL_CARGA_HORARIA,
						   NUM_CREDITO,
						   SGL_PERIODO_LETIVO,
						   VAL_CON_AVALIACAO
					  FROM DBSIAF.OBS_HIST_SIMULA OBS
					 WHERE OBS.COD_HIST_SIMULA = R_HIST_SIMULA.COD_HIST_SIMULA
						   AND (OBS.IDT_TPO_OBS <> 'E' OR OBS.IDT_TPO_OBS IS NULL)
						   AND NOT EXISTS (SELECT 1
							  FROM DBSIAF.OBS_HISTORICO OOO
							 WHERE OOO.COD_HIST_ESCOLAR = NCODHISTESCOLAR
								   AND OOO.NUM_OBSERVACAO = OBS.NUM_OBSERVACAO);
				COMMIT;
			END IF;
		EXCEPTION
			WHEN OTHERS THEN
              null;
				--RAISE_APPLICATION_ERROR(-20500,SQLERRM);
		END;
		COMMIT;
	END LOOP;
*/
END;
