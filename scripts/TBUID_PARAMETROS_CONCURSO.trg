create or replace trigger "DBVESTIB"."TBUID_PARAMETROS_CONCURSO" 
  before insert or update or delete on DBVESTIB."PARAMETROS_CONCURSO"
  for each row
DECLARE
	V_IDT_OPERACAO  CHAR(1);
	V_TIPO_CONCURSO DBVESTIB.CONCURSO.COD_TPO_CONCURSO%TYPE;
BEGIN

	-- =========================================================================
	-- LOG
	-- =========================================================================
	IF INSERTING THEN
		V_IDT_OPERACAO := 'I';
	ELSIF UPDATING THEN
		V_IDT_OPERACAO := 'U';
	ELSIF DELETING THEN
		V_IDT_OPERACAO := 'D';
	END IF;

	IF INSERTING
	   OR UPDATING THEN
		:NEW.DAT_OPERACAO_LOG := SYSDATE;
		:NEW.COD_USUARIO_LOG  := DBSIAF.F_BUSCA_FUNCIONARIO(USER);
		INSERT INTO DBVESTIB.PARAMETROS_CONCURSO_LOG
			(CODCONC,
			 INDDADOSBANCARIOSFUNC,
			 INDCPFOBRIGATORIO,
			 INDCONCUNIBH,
			 INDTREINANTE,
			 INDEXIBIRCANHOTO,
			 INDEXIBIRMODALIDADE,
			 NUMOPCOES,
			 DATINIINSPROMOTOR,
			 DATFIMINSPROMOTOR,
			 INDEXIBIRUPLOADCURRICULO,
			 INDALTERADADOSINSCPAGA,
			 COD_USUARIO_LOG,
			 DAT_OPERACAO_LOG,
			 IDT_OPERACAO_LOG)
		VALUES
			(:NEW.CODCONC,
			 :NEW.INDDADOSBANCARIOSFUNC,
			 :NEW.INDCPFOBRIGATORIO,
			 :NEW.INDCONCUNIBH,
			 :NEW.INDTREINANTE,
			 :NEW.INDEXIBIRCANHOTO,
			 :NEW.INDEXIBIRMODALIDADE,
			 :NEW.NUMOPCOES,
			 :NEW.DATINIINSPROMOTOR,
			 :NEW.DATFIMINSPROMOTOR,
			 :NEW.INDEXIBIRUPLOADCURRICULO,
			 :NEW.INDALTERADADOSINSCPAGA,
			 :NEW.COD_USUARIO_LOG,
			 :NEW.DAT_OPERACAO_LOG,
			 V_IDT_OPERACAO);
	END IF;

	IF DELETING THEN
		INSERT INTO DBVESTIB.PARAMETROS_CONCURSO_LOG
			(CODCONC,
			 INDDADOSBANCARIOSFUNC,
			 INDCPFOBRIGATORIO,
			 INDCONCUNIBH,
			 INDTREINANTE,
			 INDEXIBIRCANHOTO,
			 INDEXIBIRMODALIDADE,
			 NUMOPCOES,
			 DATINIINSPROMOTOR,
			 DATFIMINSPROMOTOR,
			 INDEXIBIRUPLOADCURRICULO,
			 INDALTERADADOSINSCPAGA,
			 COD_USUARIO_LOG,
			 DAT_OPERACAO_LOG,
			 IDT_OPERACAO_LOG)
		VALUES
			(:OLD.CODCONC,
			 :OLD.INDDADOSBANCARIOSFUNC,
			 :OLD.INDCPFOBRIGATORIO,
			 :OLD.INDCONCUNIBH,
			 :OLD.INDTREINANTE,
			 :OLD.INDEXIBIRCANHOTO,
			 :OLD.INDEXIBIRMODALIDADE,
			 :OLD.NUMOPCOES,
			 :OLD.DATINIINSPROMOTOR,
			 :OLD.DATFIMINSPROMOTOR,
			 :OLD.INDEXIBIRUPLOADCURRICULO,
			 :OLD.INDALTERADADOSINSCPAGA,
			 DBSIAF.F_BUSCA_FUNCIONARIO(USER),
			 SYSDATE,
			 V_IDT_OPERACAO);
	END IF;
	-- =========================================================================
	-- LOG
	-- =========================================================================

	IF INSERTING
	   OR UPDATING THEN
	
		SELECT CON.COD_TPO_CONCURSO
		  INTO V_TIPO_CONCURSO
		  FROM DBVESTIB.CONCURSO CON
		 WHERE CON.CODCONC = :NEW.CODCONC;
	
		IF V_TIPO_CONCURSO = 1 THEN
			IF :NEW.DTPROVA1ETAPA IS NULL THEN
				RAISE_APPLICATION_ERROR(-20500,
										'A data da prova 1° etapa precisa ser preenchida.');
			END IF;
			IF :NEW.DTRESULT1ETAPA IS NULL THEN
				RAISE_APPLICATION_ERROR(-20500,
										'A data do resultado da 1° etapa precisa ser preenchida.');
			END IF;
		END IF;
	END IF;

EXCEPTION
	WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20500,
								SQLERRM);
END TBUID_PARAMETROS_CONCURSO;
/
