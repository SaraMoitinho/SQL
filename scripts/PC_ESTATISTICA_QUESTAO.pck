CREATE OR REPLACE PACKAGE DBVESTIB.PC_ESTATISTICA_QUESTAO IS
	-------------------------------------------------------------
	-- Pacote para Cálculo de estattística de questões
	-- Sara Moitinho
	-------------------------------------------------------------

	TYPE REC_ESTATISTICA IS
	
	RECORD(
		CODCONC  DBVESTIB.CONCURSO.CODCONC%TYPE,
		CODCUR   DBVESTIB.CURSO.CODCUR%TYPE,
		NQUESTAO NUMBER,
		NACERTOS NUMBER,
		NERROS   NUMBER,
		CODPRO   DBVESTIB.PROVA.CODPRO%TYPE,
		OPCLIN   DBVESTIB.GABARITO.OPCLIN%TYPE);

	TYPE TAB_ESTATISTICA IS TABLE OF REC_ESTATISTICA;

	FUNCTION F_TBL_ESTATISTICA_QUESTOES(P_CODCONC DBVESTIB.CONCURSO.CODCONC%TYPE) RETURN TAB_ESTATISTICA
		PIPELINED;

	TYPE REC_MARATONA IS
	
	RECORD(
		CODCONC   DBVESTIB.CONCURSO.CODCONC%TYPE,
		CODCUR    DBVESTIB.CURSO.CODCUR%TYPE,
		CODTUR    DBVESTIB.TURNO.CODTUR%TYPE,
		QTD_FIDIS NUMBER,
		QTD_COMAU NUMBER,
		QTD_FIATA NUMBER,
		QTD_FIATB NUMBER,
		QTD_FIATS NUMBER,
		QTD_FPT   NUMBER,
		QTD_FUND  NUMBER);

	TYPE TAB_MARATONA IS TABLE OF REC_MARATONA;

	FUNCTION F_TBL_MARATONA(P_CODCONC DBVESTIB.CONCURSO.CODCONC%TYPE) RETURN TAB_MARATONA
		PIPELINED;

END;
/
CREATE OR REPLACE PACKAGE BODY DBVESTIB.PC_ESTATISTICA_QUESTAO IS

	FUNCTION F_TBL_ESTATISTICA_QUESTOES(P_CODCONC DBVESTIB.CONCURSO.CODCONC%TYPE) RETURN TAB_ESTATISTICA
		PIPELINED IS
	
		-- CURSOR RECUPERANDO OS CURSOS DO CONCURSO    
		CURSOR C_CURSOS IS
			SELECT CUR.CODCUR CODCUR,
				   CAD.CODETP CODETP,
				   LENGTH(GAB.RESPGAB) QUANTQUESTAO,
				   CAD.CODCAD CODCAD,
				   GAB.OPCLIN OPCLIN
			  FROM DBVESTIB.CURSO         CUR,
				   DBVESTIB.CADERNO       CAD,
				   DBVESTIB.CURSOSCADERNO CUC,
				   DBVESTIB.GABARITO      GAB
			 WHERE CAD.CODCONC = P_CODCONC
				   AND CAD.CODCONC = CUR.CODCONC
				   AND CAD.CODCONC = GAB.CODCONC
				   AND CAD.CODCAD = GAB.CODCAD
				   AND CAD.CODCAD = CUC.CODCAD
				   AND CUR.CODCUR = CUC.CODCUR
				   AND CUC.CODCONC = CUR.CODCONC;
	
		-- CURSOR RECUPERANDO ACERTOS DAS QUESTOES POR QUESTAO E CURSO
		CURSOR C_QUESTOES(P_CODETP  DBVESTIB.ETAPA.CODETP%TYPE,
						  P_CODCUR  DBVESTIB.CURSO.CODCUR%TYPE,
						  P_OPCLIN  DBVESTIB.GABARITO.OPCLIN%TYPE,
						  P_QUESTAO NUMBER) IS
			SELECT 'Acertos' STATUS,
				   COUNT(*) QUANT
			  FROM DBVESTIB.RESPOSTA       RES,
				   DBVESTIB.CANDIDATO      CAN,
				   DBVESTIB.RCANDCURTUROPC RCA,
				   DBVESTIB.CURSOSCADERNO  CCA
			 WHERE CAN.CODCONC = P_CODCONC
				   AND CAN.CODCONC = RES.CODCONC
				   AND CAN.CODCAN = RES.CODCAN
				   AND CAN.CODCONC = RCA.CODCONC
				   AND CAN.CODCAN = RCA.CODCAN
				   AND CCA.CODCONC = RCA.CODCONC
				   AND CCA.CODCUR = RCA.CODCUR
				   AND RES.CODETP = P_CODETP
				   AND RCA.NROOPC = '1'
				   AND RCA.CODCUR = P_CODCUR
				   AND ((CAN.INDCONFIRMADO = 'N') OR (CAN.INDCONFIRMADO IS NULL))
				   AND SUBSTR(RES.RESPCAN,
							  P_QUESTAO,
							  1) = (SELECT SUBSTR(RESPGAB,
													  P_QUESTAO,
													  1)
										  FROM DBVESTIB.GABARITO GAB
										 WHERE GAB.CODCONC = CAN.CODCONC
											   AND GAB.CODCAD = CCA.CODCAD
											   AND GAB.OPCLIN = P_OPCLIN)
			UNION ALL
			SELECT 'Erros' STATUS,
				   COUNT(*) QUANT
			  FROM DBVESTIB.RESPOSTA       RES,
				   DBVESTIB.CANDIDATO      CAN,
				   DBVESTIB.RCANDCURTUROPC RCA,
				   DBVESTIB.CURSOSCADERNO  CCA
			 WHERE CAN.CODCONC = P_CODCONC
				   AND CAN.CODCONC = RES.CODCONC
				   AND CAN.CODCAN = RES.CODCAN
				   AND CAN.CODCONC = RCA.CODCONC
				   AND CAN.CODCAN = RCA.CODCAN
				   AND CCA.CODCONC = RCA.CODCONC
				   AND CCA.CODCUR = RCA.CODCUR
				   AND RES.CODETP = P_CODETP
				   AND RCA.NROOPC = '1'
				   AND RCA.CODCUR = P_CODCUR
				   AND SUBSTR(RES.RESPCAN,
							  P_QUESTAO,
							  1) <> (SELECT SUBSTR(RESPGAB,
													   P_QUESTAO,
													   1)
										   FROM DBVESTIB.GABARITO GAB
										  WHERE GAB.CODCONC = CAN.CODCONC
												AND GAB.CODCAD = CCA.CODCAD
												AND GAB.OPCLIN = P_OPCLIN);
	
		I                  NUMBER;
		NACERTOS           NUMBER;
		NERROS             NUMBER;
		V_CODPRO           DBVESTIB.PROVA.CODPRO%TYPE;
		RDADOS_ESTATISTICA REC_ESTATISTICA;
	BEGIN
	
		-- lendo os cursos do concurso
		FOR R_CURSOS IN C_CURSOS LOOP
			I := 1;
			-- lendo as questoes de provas
			WHILE (I <= R_CURSOS.QUANTQUESTAO) LOOP
				BEGIN
					FOR R_QUESTOES IN C_QUESTOES(R_CURSOS.CODETP,
												 R_CURSOS.CODCUR,
												 R_CURSOS.OPCLIN,
												 I) LOOP
						IF R_QUESTOES.STATUS = 'Acertos' THEN
							NACERTOS := R_QUESTOES.QUANT;
						ELSE
							NERROS := R_QUESTOES.QUANT;
						END IF;
					END LOOP;
				
					-- buscando prova
					SELECT CODPRO
					  INTO V_CODPRO
					  FROM DBVESTIB.PROVASCADERNO
					 WHERE CODCAD = R_CURSOS.CODCAD
						   AND CODCONC = P_CODCONC
						   AND I BETWEEN TO_NUMBER(QUEINI) AND TO_NUMBER(QUEFIN);
				
					-- inserindo registro na tabela contendo acertos e erros por
					-- questao e curso
				
					RDADOS_ESTATISTICA.CODCONC  := P_CODCONC;
					RDADOS_ESTATISTICA.CODCUR   := R_CURSOS.CODCUR;
					RDADOS_ESTATISTICA.NQUESTAO := I;
					RDADOS_ESTATISTICA.NACERTOS := NACERTOS;
					RDADOS_ESTATISTICA.NERROS   := NERROS;
					RDADOS_ESTATISTICA.CODPRO   := V_CODPRO;
					RDADOS_ESTATISTICA.OPCLIN   := R_CURSOS.OPCLIN;
				
					PIPE ROW(RDADOS_ESTATISTICA);
				END LOOP;
				I := I + 1;
			END LOOP; -- fim loop de questoes
		END LOOP; -- fim loop de cursos  
		RETURN;
	END;

	FUNCTION F_TBL_MARATONA(P_CODCONC DBVESTIB.CONCURSO.CODCONC%TYPE) RETURN TAB_MARATONA
		PIPELINED IS
	
		CURSOR C_COMAU IS
			SELECT CAN.CODCAN,
				   CUR.CODCUR,
				   EFI.CODESCOLA,
				   TUR.DSCTUR,
				   EMP.CODEMP
			  FROM DBVESTIB.CANDIDATO      CAN,
				   DBVESTIB.EMPRESA        EMP,
				   DBVESTIB.ESCOLA_FIAT    EFI,
				   DBVESTIB.TURNO          TUR,
				   DBVESTIB.CURSO          CUR,
				   DBVESTIB.RCANDCURTUROPC RCC
			 WHERE CAN.CODCONC = &P_CODCONC
				   AND EMP.CODEMP = 3
				   AND CAN.CODEMP = EMP.CODEMP
				   AND CAN.CODESCOLA = EFI.CODESCOLA
				   AND EFI.TIPOESCOLA = TUR.CODTUR
				   AND RCC.CODCONC = CUR.CODCONC
				   AND RCC.CODCUR = CUR.CODCUR
				   AND RCC.CODTUR = TUR.CODTUR
				   AND RCC.CODCAN = CAN.CODCAN
				   AND RCC.CODCONC = CAN.CODCONC
				   AND RCC.NROOPC = '1';
	
		QUANT_ESCOLA    NUMBER;
		I               NUMBER;
		J               NUMBER;
		RDADOS_MARATONA REC_MARATONA;
	BEGIN
	
		SELECT COUNT(EFI.CODESCOLA)
		  INTO QUANT_ESCOLA
		  FROM DBVESTIB.CANDIDATO      CAN,
			   DBVESTIB.EMPRESA        EMP,
			   DBVESTIB.ESCOLA_FIAT    EFI,
			   DBVESTIB.TURNO          TUR,
			   DBVESTIB.CURSO          CUR,
			   DBVESTIB.RCANDCURTUROPC RCC
		 WHERE CAN.CODCONC = &P_CODCONC
			   AND CAN.CODEMP = EMP.CODEMP
			   AND CAN.CODESCOLA = EFI.CODESCOLA
			   AND EFI.TIPOESCOLA = TUR.CODTUR
			   AND RCC.CODCONC = CUR.CODCONC
			   AND RCC.CODCUR = CUR.CODCUR
			   AND RCC.CODTUR = TUR.CODTUR
			   AND RCC.CODCAN = CAN.CODCAN
			   AND RCC.CODCONC = CAN.CODCONC
			   AND RCC.NROOPC = '1';
	
		I := 1;
		J := 1;
		FOR R_COMAU IN C_COMAU LOOP
			BEGIN
				WHILE I <= QUANT_ESCOLA LOOP
					BEGIN
						WHILE J <= 2 LOOP
							BEGIN
								RDADOS_MARATONA.CODCONC := P_CODCONC;
								RDADOS_MARATONA.CODCUR  := R_COMAU.CODCUR;
								RDADOS_MARATONA.CODTUR  := R_COMAU.CODCUR;
								--RDADOS_MARATONA.QTD_COMAU := R_COMAU.COUNT(CAN.CODCAN);
								PIPE ROW(RDADOS_MARATONA);
							END;
						END LOOP; -- FIM LOOP TIPO ESCOLA
					END;
				END LOOP; -- FIM LOOOP DE ESCOLA
			END;
		END LOOP; -- FIM DO LOOP COMAU
	
	END;

END;
/
