CREATE OR REPLACE TRIGGER DBVESTIB.TBUID_OPCAOCANDIDATO                                                   
BEFORE INSERT OR UPDATE OR DELETE ON DBVESTIB.OPCAOCANDIDATO                                              
FOR EACH ROW                                                                                              
DECLARE
	V_IDT_OPERACAO CHAR(1);
	NVALIDA        NUMBER;
    indicador dbvestib.opcaocandidato.indfies%type;
BEGIN
	-- =========================================================================                             
	-- LOG                                                                                            
	-- =========================================================================                             
	IF INSERTING THEN
		V_IDT_OPERACAO := 'I';
	ELSIF UPDATING THEN
		V_IDT_OPERACAO := 'U';
	ELSIF DELETING THEN
		V_IDT_OPERACAO := 'D';
	END IF;

	-- concurso "COC - outras captações poderá fazer atualização na opção FIES)

	SELECT COUNT(1)
	  INTO NVALIDA
	  FROM DBVESTIB.CLASSIFICACAO_CANDIDATO CLA
	 WHERE CLA.CODCONC = :NEW.CODCONC
		   AND CLA.CODCAN = :NEW.CODINSC
		   AND :NEW.NROOPC = '1';

	IF (NVALIDA > 0) THEN
	
		SELECT COUNT(1)
		  INTO NVALIDA
		  FROM DBVESTIB.CONCURSO CON
		 WHERE CON.CODCONC = :NEW.CODCONC
			   AND CON.COD_TPO_CONCURSO IN (3,
											64);
	
		IF (NVALIDA = 0) THEN
			RAISE_APPLICATION_ERROR(-20500,
									'Não é possivel alterar a inscrição, A mesma ja foi classificada.');
		ELSE
          indicador := :NEW.INDFIES;
          indicador := :OLD.INDFIES;
			IF (:OLD.INDFIES = :NEW.INDFIES) THEN
				RAISE_APPLICATION_ERROR(-20500,
										'Não é permitido alterar dados da opção de curso de um candidato classificado ou deferido.');
			END IF;
		END IF;
	END IF;

	IF INSERTING
	   OR UPDATING THEN
		:NEW.DAT_OPERACAO_LOG := SYSDATE;
		:NEW.COD_USUARIO_LOG  := DBSIAF.F_BUSCA_FUNCIONARIO(USER);
	
		INSERT INTO DBVESTIB.OPCAOCANDIDATO_LOG
			(CODCONC,
			 CODINSC,
			 NROOPC,
			 CODCUR,
			 CODCAM,
			 CODTUR,
			 OPCLIN,
			 CODINSTITUICAO,
			 INDPRINCIPAL,
			 INDFORMACAOAMPLIADA,
			 INDPROUNI,
			 INDFIES,
             IND_DESEJA_PROUNI,
			 IND_DESEJA_FIES,
			 COD_USUARIO_LOG,
			 DAT_OPERACAO_LOG,
			 IDT_OPERACAO_LOG)
		VALUES
			(:NEW.CODCONC,
			 :NEW.CODINSC,
			 :NEW.NROOPC,
			 :NEW.CODCUR,
			 :NEW.CODCAM,
			 :NEW.CODTUR,
			 :NEW.OPCLIN,
			 :NEW.CODINSTITUICAO,
			 :NEW.INDPRINCIPAL,
			 :NEW.INDFORMACAOAMPLIADA,
			 :NEW.INDPROUNI,
			 :NEW.INDFIES,
             :NEW.IND_DESEJA_PROUNI,
			 :NEW.IND_DESEJA_FIES,
			 :NEW.COD_USUARIO_LOG,
			 :NEW.DAT_OPERACAO_LOG,
			 V_IDT_OPERACAO);
	END IF;

	IF DELETING THEN
		INSERT INTO DBVESTIB.OPCAOCANDIDATO_LOG
			(CODCONC,
			 CODINSC,
			 NROOPC,
			 CODCUR,
			 CODCAM,
			 CODTUR,
			 OPCLIN,
			 CODINSTITUICAO,
			 INDPRINCIPAL,
			 INDFORMACAOAMPLIADA,
			 INDPROUNI,
			 INDFIES,
             IND_DESEJA_PROUNI,
			 IND_DESEJA_FIES,
			 COD_USUARIO_LOG,
			 DAT_OPERACAO_LOG,
			 IDT_OPERACAO_LOG)
		VALUES
			(:OLD.CODCONC,
			 :OLD.CODINSC,
			 :OLD.NROOPC,
			 :OLD.CODCUR,
			 :OLD.CODCAM,
			 :OLD.CODTUR,
			 :OLD.OPCLIN,
			 :OLD.CODINSTITUICAO,
			 :OLD.INDPRINCIPAL,
			 :OLD.INDFORMACAOAMPLIADA,
			 :OLD.INDPROUNI,
			 :OLD.INDFIES,
             :OLD.IND_DESEJA_PROUNI,
			 :OLD.IND_DESEJA_FIES,
			 DBSIAF.F_BUSCA_FUNCIONARIO(USER),
			 SYSDATE,
			 V_IDT_OPERACAO);
	END IF;

	-- ATUALIZANDO OPCAO DE CURSO DO CANDIDATO
	BEGIN
	
		IF UPDATING
		   OR INSERTING THEN
		
			SELECT COUNT(1)
			  INTO NVALIDA
			  FROM DBVESTIB.INSCRICAO
			 WHERE CODCONC = :NEW.CODCONC
				   AND CODINSC = :NEW.CODINSC
				   AND COD_STATUS_INSCRICAO = 2;
		ELSE
			SELECT COUNT(1)
			  INTO NVALIDA
			  FROM DBVESTIB.INSCRICAO
			 WHERE CODCONC = :OLD.CODCONC
				   AND CODINSC = :OLD.CODINSC
				   AND COD_STATUS_INSCRICAO = 2;
		
		END IF;
	
		-- ATUALIZA OPCAO DE CURSO          
		IF NVALIDA > 0 THEN
			IF UPDATING
			   OR INSERTING THEN
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASOPCAOCAND := DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASOPCAOCAND + 1;
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VOPCAOCAND(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASOPCAOCAND).CODCONC := :NEW.CODCONC;
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VOPCAOCAND(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASOPCAOCAND).CODINSC := :NEW.CODINSC;
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VOPCAOCAND(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASOPCAOCAND).NROOPC := :NEW.NROOPC;
			ELSE
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASOPCAOCAND := DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASOPCAOCAND + 1;
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VOPCAOCAND(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASOPCAOCAND).CODCONC := :OLD.CODCONC;
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VOPCAOCAND(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASOPCAOCAND).CODINSC := :OLD.CODINSC;
				DBVESTIB.PC_INSCRICAO_MUT_TBL.VOPCAOCAND(DBVESTIB.PC_INSCRICAO_MUT_TBL.VNUMLINHASOPCAOCAND).NROOPC := :OLD.NROOPC;
			END IF;
		END IF;
	
	EXCEPTION
		WHEN OTHERS THEN
			NULL;
	END;

	IF UPDATING
	   OR INSERTING THEN
	
		SELECT COUNT(1)
		  INTO NVALIDA
		  FROM DBVESTIB.CAMPUS CAM
		 WHERE CAM.CODCAM = :NEW.CODCAM
			   AND CAM.CODINSTITUICAO <> :NEW.CODINSTITUICAO;
	
		IF (NVALIDA > 0) THEN
			RAISE_APPLICATION_ERROR(-20500,
									'O campus escolhido nao pertence a IES selecionada');
		END IF;
	
  
    select count(1)
    INTO NVALIDA
    from dbvestib.rcurtur rcu
    where rcu.codconc = :NEW.codconc
          and rcu.codcur = :new.codcur
          and rcu.codtur = :new.codtur
          and rcu.codcam = :new.codcam
          and rcu.indcancelado = 'S';
          
          
    IF (NVALIDA > 0) THEN
			RAISE_APPLICATION_ERROR(-20500,
									'Curso não ofertado nesse processo');
		END IF;      
          
  
	END IF;

EXCEPTION
	WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20500,
								SQLERRM);
END TBUID_OPCAOCANDIDATO;
/
