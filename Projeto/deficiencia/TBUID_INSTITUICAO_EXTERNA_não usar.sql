CREATE OR REPLACE TRIGGER DBVESTIB.TBUID_INSTITUICAO_EXTERNA
 BEFORE DELETE OR UPDATE OR INSERT ON DBVESTIB.INSTITUICAO_EXTERNA
 REFERENCING OLD AS OLD NEW AS NEW  FOR EACH ROW 
DECLARE
	V_IDT_OPERACAO CHAR(1);

BEGIN
	IF INSERTING THEN
		V_IDT_OPERACAO := 'I';
	ELSIF UPDATING THEN
		V_IDT_OPERACAO := 'U';
	ELSIF DELETING THEN
		V_IDT_OPERACAO := 'D';
	END IF;

	IF INSERTING
	   OR UPDATING THEN
	
		INSERT INTO DBVESTIB.INSTITUICAO_EXTERNA_LOG
			(COD_INSTITUICAO,
			 NOME_INSTITUICAO,
			 COD_INSTITUICAO_VESTIB,
			 COD_INSTITUICAO_SIAF,
			 SGL_INSTITUICAO,
			 DAT_OPERACAO_LOG,
			 COD_USUARIO_LOG,
			 IDT_OPERACAO_LOG)
		VALUES
			(:NEW.COD_INSTITUICAO,
			 :NEW.NOME_INSTITUICAO,
			 :NEW.COD_INSTITUICAO_VESTIB,
			 :NEW.COD_INSTITUICAO_SIAF,
			 :NEW.SGL_INSTITUICAO,
			 SYSDATE,
			 DBSIAF.F_BUSCA_FUNCIONARIO(USER),
			 V_IDT_OPERACAO);
	END IF;

	IF DELETING THEN
		INSERT INTO DBVESTIB.INSTITUICAO_EXTERNA_LOG
			(COD_INSTITUICAO,
			 NOME_INSTITUICAO,
			 COD_INSTITUICAO_VESTIB,
			 COD_INSTITUICAO_SIAF,
			 SGL_INSTITUICAO,
			 DAT_OPERACAO_LOG,
			 COD_USUARIO_LOG,
			 IDT_OPERACAO_LOG)
		VALUES
			(:OLD.COD_INSTITUICAO,
			 :OLD.NOME_INSTITUICAO,
			 :OLD.COD_INSTITUICAO_VESTIB,
			 :OLD.COD_INSTITUICAO_SIAF,
			 :OLD.SGL_INSTITUICAO,
			 SYSDATE,
			 DBSIAF.F_BUSCA_FUNCIONARIO(USER),
			 V_IDT_OPERACAO);
	END IF;

EXCEPTION
	WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20500,
								SQLERRM);
END TBUID_INSTITUICAO_EXTERNA;
/
